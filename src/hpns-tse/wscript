# -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-
import os
# def options(opt):
#     pass

# def configure(conf):
#     conf.check_nonfatal(header_name='stdint.h', define_name='HAVE_STDINT_H')

def configure(conf):

    # environment = get_environment()
    root_dir = conf.path.abspath()

    # protobuf_lib_dir = os.path.join(root_dir, "libs/protobuf-lib")
    # conf.env.append_value("LINKFLAGS",
    #     ["-L%s/" % os.path.abspath(protobuf_lib_dir)])
    # conf.env.append_value("CPPFLAGS",
    #     ["-I%s/include" % os.path.abspath(protobuf_lib_dir), ])

    sdplog_lib_dir   = os.path.join(root_dir, "libs/sdplog-lib")
    conf.env.append_value("CPPFLAGS",
        ["-I%s/include" % os.path.abspath(sdplog_lib_dir), ])

    # conf.env.append_value("LIB", ["protobuf"])
    # if environment == 'huawei':
    #     conf.env.append_value("CPPFLAGS",
    #         ["-DHPNS_HUAWEI"])

def build(bld):
    module = bld.create_ns3_module('hpns-tse', ['core', 'network', 'internet'])
    module.source = [
        'model/common/helper/Logger.cc',
        
        'model/Core.cc',
        'model/pod.cc',
        'model/Server.cc',
        'model/supernode.cc',
        'model/track.cc',
        ]

    # module_test = bld.create_ns3_module_test_library('hpns-tse')
    # module_test.source = [
    #     'test/hpns-tse-test-suite.cc',
    #     ]

    headers = bld(features='ns3header')
    headers.module = 'hpns-tse'
    headers.source = [
        'model/common/helper/Logger.hh',
        
        'model/Core.hh',
        'model/pod.hh',
        'model/Server.hh',
        'model/supernode.hh',
        'model/track.hh',
        ]

    if bld.env.ENABLE_EXAMPLES:
        bld.recurse('examples')

    bld.ns3_python_bindings()

